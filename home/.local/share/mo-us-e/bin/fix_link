#!/bin/bash

# /// Get the canonical path to an existing file.
function canonicalize() {
	old_pwd="$(pwd)"
	cd $(dirname "$1")
	echo "$PWD/$(basename "$1")"
	cd "$old_pwd"
}


function make_relative() {
	base=$1
	target=$2
	
	common="$base"
	back=
	while [ "${target#"$common/"}" == "${target}" ]; do
		common=$(dirname "${common}")
		back="${back}../"
	done
	
	echo "${back}${target#"$common/"}"
}

function make_link_relative() {
	base="$1"
	link="$2"
	link_abs=$(canonicalize "${link}")
	link_dir="$(dirname "$link_abs")"
	
	link_relative="${link#$base/}"
	if [ "${link_abs#$base/}" == "${link_abs}" ]; then
		echo "Link is not under base path."
		return 1
	fi
	
	destination="$(readlink "${link_abs}")"
	
	if [[ "x${destination}" == "x/"* ]]; then
		new_destination=$(make_relative "${link_dir}" "${base}${destination}")
		echo "$link = {$destination => $new_destination}"
		if [ ! -e "${link_dir}/${new_destination}" ]; then
			echo "Result is a dangling symlink, no action taken."
		else
			ln -sfn "${new_destination}" "$link"
		fi
	fi
}

function fix_links() {
	base=$1
	shift 1
	
	while [ $# -ge 1 ]; do
		if [ -L "$1" ]; then
			make_link_relative "$base" "$1"
		elif [ -d "$1" ]; then
			fix_links "$base" "$1/"*
		fi;
		shift 1
	done
}

fix_links "$@"
